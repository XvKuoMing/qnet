services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-myapp}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "${POSTGRES_PORT:-5433}:${POSTGRES_PORT:-5433}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network
    env_file:
      - .env

  pgadmin:
    image: dpage/pgadmin4:5.3
    container_name: pgadmin_web
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'True'
      PGADMIN_LISTEN_ADDRESS: '0.0.0.0'
      PGADMIN_LISTEN_PORT: ${PGADMIN_PORT:-8111}
      PGADMIN_CONFIG_LOGIN_BANNER: "\"Login with: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}\""
    ports:
      - "${PGADMIN_PORT:-8111}:${PGADMIN_PORT:-8111}"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      - postgres
    env_file:
      - .env
  
  qnet:
    build: .
    container_name: qnet
    restart: unless-stopped
    ports:
      - "${GO_PORT:-8222}:${GO_PORT:-8222}"
    environment:
      - GO_HOST=${GO_HOST}
      - GO_PORT=${GO_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
    depends_on:
      - postgres
    networks:
      - app-network
    env_file:
      - .env

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  app-network:
    driver: bridge
